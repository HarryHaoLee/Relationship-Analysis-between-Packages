{"name": "django_url_shorterner", "description": null, "license": null, "starNum": 0, "folkNum": 0, "watchNum": 0, "topic": [], "contributors": ["wackdot"], "packages": ["", "setuptools", "yields ``Distribution`` instances found on", "er with different class", "__main__", "directory", "Django", "subpath):", "a", "__('pkg_resources", "time", "collections", "hashlib", "\"moves\")", "er to import six", "er", "er_type] = namespace_handler", "stat", "er object has already", "'FileFinder'):", "struct", "io", "able object\"\"\"", "zipimport", "importer", "linecache", "path_item", "lib\" if PY34 else \"imp\"", "pkgutil", "_imp", "module):", "plistlib", "os", "er_type] = distribution_finder", "types", "__('ctypes", "er\"\"\"", "er_type", "er in enumerate(sys", "itertools", "file_ns_handler)", "find_on_path)", "errno", "er'", "pkg_resources", "__(moduleOrReq)", "functools", "pip", "list=['__name__'],", "module)", "moduleName", "namespace_handler):", "er into sys", "sysconfig", "zipfile", "since they cause problems", "er is None:", "er = get_importer(path_item)", "%(module)s", "'SourceFileLoader'", "s", "datetime", "ctypes", "base64", "er_type` is the type or class of a PEP 302 \"Importer\" (sys", "__(name)", "er)", "importlib", "logging", "packageName", "er):", "ZipProvider)", "lib_machinery = None", "pytz", "only=False):", "email", "er = _SixMetaPathImporter(__name__)", "rest_framework", "bisect", "_module(name):", "ers", "since the other six instance will have", "\n", "imp as _imp", "__future__", "shutil", "django", "\"moves", "_module(self", "_name\": entry", "distribution_finder):", "only)", "lib_machinery", "tempfile", "path_entry", "operator", "platform", "able on `path` (default=sys", "\"reload\")", "distutils", "warnings", "sets", "er to the meta path import hook", "directory cache for our target archive", "under delayed import mechanisms", "find_eggs_in_zip)", "StringIO", "er instance", "csv", "__(parent)", "re", "__(extant)", "sys", "er for finding optionally-vendored", "%s,", "textwrap", "compileall"]}