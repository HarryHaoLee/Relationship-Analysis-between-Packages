{"name": "CodingMonster", "description": "OOPartsWinter", "license": null, "starNum": 0, "folkNum": 0, "watchNum": 0, "topic": [], "contributors": ["doomsheart"], "packages": ["", "importlib", "lib_machinery", "imp as _imp", "lib\" if PY34 else \"imp\"", "\"moves", "er to import six", "er_type", "er = get_importer(path_item)", "%s,", "StringIO", "__(moduleOrReq)", "socket", "__('ctypes", "zipimport", "logging", "base64", "er into sys", "er", "platform", "types", "subpath):", "only)", "ZipProvider)", "er for finding optionally-vendored", "er_type] = distribution_finder", "er instance", "struct", "find_eggs_in_zip)", "lib_machinery = None", "er = _SixMetaPathImporter(__name__)", "pkg_resources", "er'", "'SourceFileLoader'", "csv", "email", "since the other six instance will have", "shutil", "errno", "s", "pytz", "%(module)s", "packageName", "er)", "pkgutil", "Django", "\"moves\")", "_module(self", "module)", "_imp", "zlib", "path_entry", "list=['__name__'],", "a", "ers", "__future__", "codecs", "io", "er):", "tempfile", "itertools", "importer", "may fail for some other reason", "textwrap", "under delayed import mechanisms", "distribution_finder):", "yields ``Distribution`` instances found on", "sysconfig", "__(extant)", "__('pkg_resources", "warnings", "namespace_handler):", "since they cause problems", "plistlib", "compileall", "setuptools", "er to the meta path import hook", "distutils", "'FileFinder'):", "er is None:", "\n", "path_item", "er with different class", "netrc", "directory", "able object\"\"\"", "er_type` is the type or class of a PEP 302 \"Importer\" (sys", "er in enumerate(sys", "winreg", "operator", "re", "os", "sys", "__(parent)", "datetime", "\"reload\")", "er_type] = namespace_handler", "file_ns_handler)", "sets", "er object has already", "linecache", "__main__", "functools", "stat", "bisect", "ctypes", "find_on_path)", "moduleName", "_winreg as winreg", "django", "only=False):", "collections", "_name\": entry", "pip", "directory cache for our target archive", "ed here for backwards compatibility", "contextlib", "zipfile", "able on `path` (default=sys", "_module(name):", "__(name)", "time", "er\"\"\"", "cgi", "hashlib", "module):"]}